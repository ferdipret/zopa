// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input renders properly 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Styled(Input)
    error={true}
    helperText="Invalid Username"
    onChange={[Function]}
    value="Hello there, brown bear!"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": StyledComponent {
      "__reactInternalMemoizedMaskedChildContext": Object {
        "__styled-components-stylesheet__": undefined,
        "__styled-components__": undefined,
        "__styled-components__next__": undefined,
      },
      "__reactInternalMemoizedUnmaskedChildContext": Object {},
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="sc-bdVaJa eJsMEG"
                  >
                                    <input
                                                      class="input-field"
                                                      value="Hello there, brown bear!"
                                    />
                                    <label
                                                      for=""
                                                      class="label false has-content"
                                    />
                                    <div
                                                      class="helper error-text"
                                    >
                                                      Invalid Username
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "error": true,
                                                "helperText": "Invalid Username",
                                                "onChange": [Function],
                                                "value": "Hello there, brown bear!",
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="sc-bdVaJa eJsMEG"
                >
                                <input
                                                class="input-field"
                                                value="Hello there, brown bear!"
                                />
                                <label
                                                for=""
                                                class="label false has-content"
                                />
                                <div
                                                class="helper error-text"
                                >
                                                Invalid Username
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "error": true,
                                                      "helperText": "Invalid Username",
                                                      "onChange": [Function],
                                                      "value": "Hello there, brown bear!",
                                                    }
                  }
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/home/pi/zopa-test/src/components/Input.js",
              "lineNumber": 37,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/home/pi/zopa-test/src/components/Input.js",
                "lineNumber": 38,
              },
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "input-field",
                "onChange": [Function],
                "onFocus": [Function],
                "value": "Hello there, brown bear!",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "input-field",
                "onChange": [Function],
                "onFocus": [Function],
                "value": "Hello there, brown bear!",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/home/pi/zopa-test/src/components/Input.js",
                  "lineNumber": 44,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "",
                  "className": "label false has-content",
                  "htmlFor": "",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "",
                  "className": "label false has-content",
                  "htmlFor": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/home/pi/zopa-test/src/components/Input.js",
                    "lineNumber": 57,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Invalid Username",
                    "className": "helper error-text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Invalid Username",
                    "className": "helper error-text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="helper error-text"
>
                    Invalid Username
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <label
                  for=""
                  class="label false has-content"
/>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "label",
                "updateQueue": null,
              },
              "stateNode": <input
                class="input-field"
                value="Hello there, brown bear!"
/>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "input",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <input
                  className="input-field"
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="Hello there, brown bear!"
/>,
                <label
                  className="label false has-content"
                  htmlFor=""
/>,
                <div
                  className="helper error-text"
>
                  Invalid Username
</div>,
              ],
              "className": "sc-bdVaJa eJsMEG",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <input
                  className="input-field"
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="Hello there, brown bear!"
/>,
                <label
                  className="label false has-content"
                  htmlFor=""
/>,
                <div
                  className="helper error-text"
>
                  Invalid Username
</div>,
              ],
              "className": "sc-bdVaJa eJsMEG",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="sc-bdVaJa eJsMEG"
>
              <input
                            class="input-field"
                            value="Hello there, brown bear!"
              />
              <label
                            for=""
                            class="label false has-content"
              />
              <div
                            class="helper error-text"
              >
                            Invalid Username
              </div>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "className": "sc-bdVaJa eJsMEG",
            "error": true,
            "helperText": "Invalid Username",
            "label": "",
            "onChange": [Function],
            "placeholder": "",
            "value": "Hello there, brown bear!",
          },
          "memoizedState": Object {
            "active": false,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "className": "sc-bdVaJa eJsMEG",
            "error": true,
            "helperText": "Invalid Username",
            "label": "",
            "onChange": [Function],
            "placeholder": "",
            "value": "Hello there, brown bear!",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": Input {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "className": "sc-bdVaJa eJsMEG",
              "error": true,
              "helperText": "Invalid Username",
              "label": "",
              "onChange": [Function],
              "placeholder": "",
              "value": "Hello there, brown bear!",
            },
            "refs": Object {},
            "renderHelperText": [Function],
            "state": Object {
              "active": false,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "error": true,
          "helperText": "Invalid Username",
          "onChange": [Function],
          "value": "Hello there, brown bear!",
        },
        "memoizedState": Object {
          "generatedClassName": "eJsMEG",
          "theme": Object {},
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "error": true,
          "helperText": "Invalid Username",
          "onChange": [Function],
          "value": "Hello there, brown bear!",
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="sc-bdVaJa eJsMEG"
                  >
                                    <input
                                                      class="input-field"
                                                      value="Hello there, brown bear!"
                                    />
                                    <label
                                                      for=""
                                                      class="label false has-content"
                                    />
                                    <div
                                                      class="helper error-text"
                                    >
                                                      Invalid Username
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "error": true,
                                                "helperText": "Invalid Username",
                                                "onChange": [Function],
                                                "value": "Hello there, brown bear!",
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="sc-bdVaJa eJsMEG"
                >
                                <input
                                                class="input-field"
                                                value="Hello there, brown bear!"
                                />
                                <label
                                                for=""
                                                class="label false has-content"
                                />
                                <div
                                                class="helper error-text"
                                >
                                                Invalid Username
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "error": true,
                                                      "helperText": "Invalid Username",
                                                      "onChange": [Function],
                                                      "value": "Hello there, brown bear!",
                                                    }
                  }
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseState": Object {
            "generatedClassName": "eJsMEG",
            "theme": Object {},
          },
          "expirationTime": 0,
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "_reactInternalInstance": Object {},
      "attrs": Object {},
      "context": Object {
        "__styled-components-stylesheet__": undefined,
        "__styled-components__": undefined,
        "__styled-components__next__": undefined,
      },
      "props": Object {
        "error": true,
        "helperText": "Invalid Username",
        "onChange": [Function],
        "value": "Hello there, brown bear!",
      },
      "refs": Object {},
      "state": Object {
        "generatedClassName": "eJsMEG",
        "theme": Object {},
      },
      "unsubscribeId": -1,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "error": true,
      "helperText": "Invalid Username",
      "onChange": [Function],
      "value": "Hello there, brown bear!",
    },
    "ref": null,
    "rendered": Object {
      "instance": Input {
        "_reactInternalFiber": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                                            class="sc-bdVaJa eJsMEG"
                      >
                                            <input
                                                                  class="input-field"
                                                                  value="Hello there, brown bear!"
                                            />
                                            <label
                                                                  for=""
                                                                  class="label false has-content"
                                            />
                                            <div
                                                                  class="helper error-text"
                                            >
                                                                  Invalid Username
                                            </div>
                      </div>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "expirationTime": 1,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "error": true,
                                                                              "helperText": "Invalid Username",
                                                                              "onChange": [Function],
                                                                              "value": "Hello there, brown bear!",
                                                                            }
                          }
/>,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "error": true,
                                                                              "helperText": "Invalid Username",
                                                                              "onChange": [Function],
                                                                              "value": "Hello there, brown bear!",
                                                                            }
                          }
/>,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 32,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "error": true,
                                                            "helperText": "Invalid Username",
                                                            "onChange": [Function],
                                                            "value": "Hello there, brown bear!",
                                                          }
                    }
/>,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="sc-bdVaJa eJsMEG"
                    >
                                        <input
                                                            class="input-field"
                                                            value="Hello there, brown bear!"
                                        />
                                        <label
                                                            for=""
                                                            class="label false has-content"
                                        />
                                        <div
                                                            class="helper error-text"
                                        >
                                                            Invalid Username
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "expirationTime": 0,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
            "memoizedState": Object {
              "generatedClassName": "eJsMEG",
              "theme": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                                            class="sc-bdVaJa eJsMEG"
                      >
                                            <input
                                                                  class="input-field"
                                                                  value="Hello there, brown bear!"
                                            />
                                            <label
                                                                  for=""
                                                                  class="label false has-content"
                                            />
                                            <div
                                                                  class="helper error-text"
                                            >
                                                                  Invalid Username
                                            </div>
                      </div>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "expirationTime": 1,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "error": true,
                                                                              "helperText": "Invalid Username",
                                                                              "onChange": [Function],
                                                                              "value": "Hello there, brown bear!",
                                                                            }
                          }
/>,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "error": true,
                                                                              "helperText": "Invalid Username",
                                                                              "onChange": [Function],
                                                                              "value": "Hello there, brown bear!",
                                                                            }
                          }
/>,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 32,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "error": true,
                                                            "helperText": "Invalid Username",
                                                            "onChange": [Function],
                                                            "value": "Hello there, brown bear!",
                                                          }
                    }
/>,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="sc-bdVaJa eJsMEG"
                    >
                                        <input
                                                            class="input-field"
                                                            value="Hello there, brown bear!"
                                        />
                                        <label
                                                            for=""
                                                            class="label false has-content"
                                        />
                                        <div
                                                            class="helper error-text"
                                        >
                                                            Invalid Username
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "expirationTime": 0,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": StyledComponent {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "__styled-components-stylesheet__": undefined,
                "__styled-components__": undefined,
                "__styled-components__next__": undefined,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {},
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "attrs": Object {},
              "context": Object {
                "__styled-components-stylesheet__": undefined,
                "__styled-components__": undefined,
                "__styled-components__next__": undefined,
              },
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
              "refs": Object {},
              "state": Object {
                "generatedClassName": "eJsMEG",
                "theme": Object {},
              },
              "unsubscribeId": -1,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "generatedClassName": "eJsMEG",
                "theme": Object {},
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/home/pi/zopa-test/src/components/Input.js",
              "lineNumber": 37,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/home/pi/zopa-test/src/components/Input.js",
                "lineNumber": 38,
              },
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "input-field",
                "onChange": [Function],
                "onFocus": [Function],
                "value": "Hello there, brown bear!",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "input-field",
                "onChange": [Function],
                "onFocus": [Function],
                "value": "Hello there, brown bear!",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/home/pi/zopa-test/src/components/Input.js",
                  "lineNumber": 44,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "",
                  "className": "label false has-content",
                  "htmlFor": "",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "",
                  "className": "label false has-content",
                  "htmlFor": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/home/pi/zopa-test/src/components/Input.js",
                    "lineNumber": 57,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Invalid Username",
                    "className": "helper error-text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Invalid Username",
                    "className": "helper error-text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="helper error-text"
>
                    Invalid Username
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <label
                  for=""
                  class="label false has-content"
/>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "label",
                "updateQueue": null,
              },
              "stateNode": <input
                class="input-field"
                value="Hello there, brown bear!"
/>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "input",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <input
                  className="input-field"
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="Hello there, brown bear!"
/>,
                <label
                  className="label false has-content"
                  htmlFor=""
/>,
                <div
                  className="helper error-text"
>
                  Invalid Username
</div>,
              ],
              "className": "sc-bdVaJa eJsMEG",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <input
                  className="input-field"
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="Hello there, brown bear!"
/>,
                <label
                  className="label false has-content"
                  htmlFor=""
/>,
                <div
                  className="helper error-text"
>
                  Invalid Username
</div>,
              ],
              "className": "sc-bdVaJa eJsMEG",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="sc-bdVaJa eJsMEG"
>
              <input
                            class="input-field"
                            value="Hello there, brown bear!"
              />
              <label
                            for=""
                            class="label false has-content"
              />
              <div
                            class="helper error-text"
              >
                            Invalid Username
              </div>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "className": "sc-bdVaJa eJsMEG",
            "error": true,
            "helperText": "Invalid Username",
            "label": "",
            "onChange": [Function],
            "placeholder": "",
            "value": "Hello there, brown bear!",
          },
          "memoizedState": Object {
            "active": false,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "className": "sc-bdVaJa eJsMEG",
            "error": true,
            "helperText": "Invalid Username",
            "label": "",
            "onChange": [Function],
            "placeholder": "",
            "value": "Hello there, brown bear!",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                                            class="sc-bdVaJa eJsMEG"
                      >
                                            <input
                                                                  class="input-field"
                                                                  value="Hello there, brown bear!"
                                            />
                                            <label
                                                                  for=""
                                                                  class="label false has-content"
                                            />
                                            <div
                                                                  class="helper error-text"
                                            >
                                                                  Invalid Username
                                            </div>
                      </div>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "expirationTime": 1,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "error": true,
                                                                              "helperText": "Invalid Username",
                                                                              "onChange": [Function],
                                                                              "value": "Hello there, brown bear!",
                                                                            }
                          }
/>,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "error": true,
                                                                              "helperText": "Invalid Username",
                                                                              "onChange": [Function],
                                                                              "value": "Hello there, brown bear!",
                                                                            }
                          }
/>,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 32,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "error": true,
                                                            "helperText": "Invalid Username",
                                                            "onChange": [Function],
                                                            "value": "Hello there, brown bear!",
                                                          }
                    }
/>,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="sc-bdVaJa eJsMEG"
                    >
                                        <input
                                                            class="input-field"
                                                            value="Hello there, brown bear!"
                                        />
                                        <label
                                                            for=""
                                                            class="label false has-content"
                                        />
                                        <div
                                                            class="helper error-text"
                                        >
                                                            Invalid Username
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "expirationTime": 0,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
            "memoizedState": Object {
              "generatedClassName": "eJsMEG",
              "theme": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "error": true,
              "helperText": "Invalid Username",
              "onChange": [Function],
              "value": "Hello there, brown bear!",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                                            class="sc-bdVaJa eJsMEG"
                      >
                                            <input
                                                                  class="input-field"
                                                                  value="Hello there, brown bear!"
                                            />
                                            <label
                                                                  for=""
                                                                  class="label false has-content"
                                            />
                                            <div
                                                                  class="helper error-text"
                                            >
                                                                  Invalid Username
                                            </div>
                      </div>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "expirationTime": 1,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "error": true,
                                                                              "helperText": "Invalid Username",
                                                                              "onChange": [Function],
                                                                              "value": "Hello there, brown bear!",
                                                                            }
                          }
/>,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "error": true,
                                                                              "helperText": "Invalid Username",
                                                                              "onChange": [Function],
                                                                              "value": "Hello there, brown bear!",
                                                                            }
                          }
/>,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 32,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "error": true,
                                                            "helperText": "Invalid Username",
                                                            "onChange": [Function],
                                                            "value": "Hello there, brown bear!",
                                                          }
                    }
/>,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="sc-bdVaJa eJsMEG"
                    >
                                        <input
                                                            class="input-field"
                                                            value="Hello there, brown bear!"
                                        />
                                        <label
                                                            for=""
                                                            class="label false has-content"
                                        />
                                        <div
                                                            class="helper error-text"
                                        >
                                                            Invalid Username
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "expirationTime": 0,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": StyledComponent {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "__styled-components-stylesheet__": undefined,
                "__styled-components__": undefined,
                "__styled-components__next__": undefined,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {},
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "attrs": Object {},
              "context": Object {
                "__styled-components-stylesheet__": undefined,
                "__styled-components__": undefined,
                "__styled-components__next__": undefined,
              },
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
              "refs": Object {},
              "state": Object {
                "generatedClassName": "eJsMEG",
                "theme": Object {},
              },
              "unsubscribeId": -1,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseState": Object {
                "generatedClassName": "eJsMEG",
                "theme": Object {},
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "className": "sc-bdVaJa eJsMEG",
          "error": true,
          "helperText": "Invalid Username",
          "label": "",
          "onChange": [Function],
          "placeholder": "",
          "value": "Hello there, brown bear!",
        },
        "refs": Object {},
        "renderHelperText": [Function],
        "state": Object {
          "active": false,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "className": "sc-bdVaJa eJsMEG",
        "error": true,
        "helperText": "Invalid Username",
        "label": "",
        "onChange": [Function],
        "placeholder": "",
        "value": "Hello there, brown bear!",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="sc-bdVaJa eJsMEG"
>
          <input
                    class="input-field"
                    value="Hello there, brown bear!"
          />
          <label
                    for=""
                    class="label false has-content"
          />
          <div
                    class="helper error-text"
          >
                    Invalid Username
          </div>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="input-field"
              onChange={[Function]}
              onFocus={[Function]}
              value="Hello there, brown bear!"
/>,
            <label
              className="label false has-content"
              htmlFor=""
/>,
            <div
              className="helper error-text"
>
              Invalid Username
</div>,
          ],
          "className": "sc-bdVaJa eJsMEG",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <input
              class="input-field"
              value="Hello there, brown bear!"
/>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input-field",
              "onChange": [Function],
              "onFocus": [Function],
              "value": "Hello there, brown bear!",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
          Object {
            "instance": <label
              for=""
              class="label false has-content"
/>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "label false has-content",
              "htmlFor": "",
            },
            "ref": null,
            "rendered": Array [
              "",
            ],
            "type": "label",
          },
          Object {
            "instance": <div
              class="helper error-text"
>
              Invalid Username
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Invalid Username",
              "className": "helper error-text",
            },
            "ref": null,
            "rendered": Array [
              "Invalid Username",
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": StyledComponent {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "__styled-components-stylesheet__": undefined,
          "__styled-components__": undefined,
          "__styled-components__next__": undefined,
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {},
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="sc-bdVaJa eJsMEG"
                    >
                                        <input
                                                            class="input-field"
                                                            value="Hello there, brown bear!"
                                        />
                                        <label
                                                            for=""
                                                            class="label false has-content"
                                        />
                                        <div
                                                            class="helper error-text"
                                        >
                                                            Invalid Username
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": true,
                                                                        "helperText": "Invalid Username",
                                                                        "onChange": [Function],
                                                                        "value": "Hello there, brown bear!",
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": true,
                                                                        "helperText": "Invalid Username",
                                                                        "onChange": [Function],
                                                                        "value": "Hello there, brown bear!",
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "error": true,
                                                      "helperText": "Invalid Username",
                                                      "onChange": [Function],
                                                      "value": "Hello there, brown bear!",
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="sc-bdVaJa eJsMEG"
                  >
                                    <input
                                                      class="input-field"
                                                      value="Hello there, brown bear!"
                                    />
                                    <label
                                                      for=""
                                                      class="label false has-content"
                                    />
                                    <div
                                                      class="helper error-text"
                                    >
                                                      Invalid Username
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "error": true,
                                                            "helperText": "Invalid Username",
                                                            "onChange": [Function],
                                                            "value": "Hello there, brown bear!",
                                                          }
                    }
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/home/pi/zopa-test/src/components/Input.js",
                "lineNumber": 37,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/home/pi/zopa-test/src/components/Input.js",
                  "lineNumber": 38,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "input-field",
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "Hello there, brown bear!",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "input-field",
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "Hello there, brown bear!",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/home/pi/zopa-test/src/components/Input.js",
                    "lineNumber": 44,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "",
                    "className": "label false has-content",
                    "htmlFor": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "",
                    "className": "label false has-content",
                    "htmlFor": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/home/pi/zopa-test/src/components/Input.js",
                      "lineNumber": 57,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Invalid Username",
                      "className": "helper error-text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Invalid Username",
                      "className": "helper error-text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="helper error-text"
>
                      Invalid Username
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <label
                    for=""
                    class="label false has-content"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "label",
                  "updateQueue": null,
                },
                "stateNode": <input
                  class="input-field"
                  value="Hello there, brown bear!"
/>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "input",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <input
                    className="input-field"
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="Hello there, brown bear!"
/>,
                  <label
                    className="label false has-content"
                    htmlFor=""
/>,
                  <div
                    className="helper error-text"
>
                    Invalid Username
</div>,
                ],
                "className": "sc-bdVaJa eJsMEG",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <input
                    className="input-field"
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="Hello there, brown bear!"
/>,
                  <label
                    className="label false has-content"
                    htmlFor=""
/>,
                  <div
                    className="helper error-text"
>
                    Invalid Username
</div>,
                ],
                "className": "sc-bdVaJa eJsMEG",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="sc-bdVaJa eJsMEG"
>
                <input
                                class="input-field"
                                value="Hello there, brown bear!"
                />
                <label
                                for=""
                                class="label false has-content"
                />
                <div
                                class="helper error-text"
                >
                                Invalid Username
                </div>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "sc-bdVaJa eJsMEG",
              "error": true,
              "helperText": "Invalid Username",
              "label": "",
              "onChange": [Function],
              "placeholder": "",
              "value": "Hello there, brown bear!",
            },
            "memoizedState": Object {
              "active": false,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "sc-bdVaJa eJsMEG",
              "error": true,
              "helperText": "Invalid Username",
              "label": "",
              "onChange": [Function],
              "placeholder": "",
              "value": "Hello there, brown bear!",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Input {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "className": "sc-bdVaJa eJsMEG",
                "error": true,
                "helperText": "Invalid Username",
                "label": "",
                "onChange": [Function],
                "placeholder": "",
                "value": "Hello there, brown bear!",
              },
              "refs": Object {},
              "renderHelperText": [Function],
              "state": Object {
                "active": false,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "error": true,
            "helperText": "Invalid Username",
            "onChange": [Function],
            "value": "Hello there, brown bear!",
          },
          "memoizedState": Object {
            "generatedClassName": "eJsMEG",
            "theme": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "error": true,
            "helperText": "Invalid Username",
            "onChange": [Function],
            "value": "Hello there, brown bear!",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="sc-bdVaJa eJsMEG"
                    >
                                        <input
                                                            class="input-field"
                                                            value="Hello there, brown bear!"
                                        />
                                        <label
                                                            for=""
                                                            class="label false has-content"
                                        />
                                        <div
                                                            class="helper error-text"
                                        >
                                                            Invalid Username
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": true,
                                                                        "helperText": "Invalid Username",
                                                                        "onChange": [Function],
                                                                        "value": "Hello there, brown bear!",
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": true,
                                                                        "helperText": "Invalid Username",
                                                                        "onChange": [Function],
                                                                        "value": "Hello there, brown bear!",
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "error": true,
                                                      "helperText": "Invalid Username",
                                                      "onChange": [Function],
                                                      "value": "Hello there, brown bear!",
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="sc-bdVaJa eJsMEG"
                  >
                                    <input
                                                      class="input-field"
                                                      value="Hello there, brown bear!"
                                    />
                                    <label
                                                      for=""
                                                      class="label false has-content"
                                    />
                                    <div
                                                      class="helper error-text"
                                    >
                                                      Invalid Username
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "error": true,
                                                            "helperText": "Invalid Username",
                                                            "onChange": [Function],
                                                            "value": "Hello there, brown bear!",
                                                          }
                    }
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "generatedClassName": "eJsMEG",
              "theme": Object {},
            },
            "expirationTime": 0,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "_reactInternalInstance": Object {},
        "attrs": Object {},
        "context": Object {
          "__styled-components-stylesheet__": undefined,
          "__styled-components__": undefined,
          "__styled-components__next__": undefined,
        },
        "props": Object {
          "error": true,
          "helperText": "Invalid Username",
          "onChange": [Function],
          "value": "Hello there, brown bear!",
        },
        "refs": Object {},
        "state": Object {
          "generatedClassName": "eJsMEG",
          "theme": Object {},
        },
        "unsubscribeId": -1,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "error": true,
        "helperText": "Invalid Username",
        "onChange": [Function],
        "value": "Hello there, brown bear!",
      },
      "ref": null,
      "rendered": Object {
        "instance": Input {
          "_reactInternalFiber": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                                                class="sc-bdVaJa eJsMEG"
                        >
                                                <input
                                                                        class="input-field"
                                                                        value="Hello there, brown bear!"
                                                />
                                                <label
                                                                        for=""
                                                                        class="label false has-content"
                                                />
                                                <div
                                                                        class="helper error-text"
                                                >
                                                                        Invalid Username
                                                </div>
                        </div>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "expirationTime": 1,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "error": true,
                                                                                    "helperText": "Invalid Username",
                                                                                    "onChange": [Function],
                                                                                    "value": "Hello there, brown bear!",
                                                                                  }
                            }
/>,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "error": true,
                                                                                    "helperText": "Invalid Username",
                                                                                    "onChange": [Function],
                                                                                    "value": "Hello there, brown bear!",
                                                                                  }
                            }
/>,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                                            class="sc-bdVaJa eJsMEG"
                      >
                                            <input
                                                                  class="input-field"
                                                                  value="Hello there, brown bear!"
                                            />
                                            <label
                                                                  for=""
                                                                  class="label false has-content"
                                            />
                                            <div
                                                                  class="helper error-text"
                                            >
                                                                  Invalid Username
                                            </div>
                      </div>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": true,
                                                                        "helperText": "Invalid Username",
                                                                        "onChange": [Function],
                                                                        "value": "Hello there, brown bear!",
                                                                      }
                        }
/>,
                    },
                    "expirationTime": 0,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "error": true,
                      "helperText": "Invalid Username",
                      "onChange": [Function],
                      "value": "Hello there, brown bear!",
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "error": true,
                      "helperText": "Invalid Username",
                      "onChange": [Function],
                      "value": "Hello there, brown bear!",
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
              "memoizedState": Object {
                "generatedClassName": "eJsMEG",
                "theme": Object {},
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                                                class="sc-bdVaJa eJsMEG"
                        >
                                                <input
                                                                        class="input-field"
                                                                        value="Hello there, brown bear!"
                                                />
                                                <label
                                                                        for=""
                                                                        class="label false has-content"
                                                />
                                                <div
                                                                        class="helper error-text"
                                                >
                                                                        Invalid Username
                                                </div>
                        </div>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "expirationTime": 1,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "error": true,
                                                                                    "helperText": "Invalid Username",
                                                                                    "onChange": [Function],
                                                                                    "value": "Hello there, brown bear!",
                                                                                  }
                            }
/>,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "error": true,
                                                                                    "helperText": "Invalid Username",
                                                                                    "onChange": [Function],
                                                                                    "value": "Hello there, brown bear!",
                                                                                  }
                            }
/>,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                                            class="sc-bdVaJa eJsMEG"
                      >
                                            <input
                                                                  class="input-field"
                                                                  value="Hello there, brown bear!"
                                            />
                                            <label
                                                                  for=""
                                                                  class="label false has-content"
                                            />
                                            <div
                                                                  class="helper error-text"
                                            >
                                                                  Invalid Username
                                            </div>
                      </div>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": true,
                                                                        "helperText": "Invalid Username",
                                                                        "onChange": [Function],
                                                                        "value": "Hello there, brown bear!",
                                                                      }
                        }
/>,
                    },
                    "expirationTime": 0,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "error": true,
                      "helperText": "Invalid Username",
                      "onChange": [Function],
                      "value": "Hello there, brown bear!",
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "error": true,
                      "helperText": "Invalid Username",
                      "onChange": [Function],
                      "value": "Hello there, brown bear!",
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": StyledComponent {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "__styled-components-stylesheet__": undefined,
                  "__styled-components__": undefined,
                  "__styled-components__next__": undefined,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {},
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "attrs": Object {},
                "context": Object {
                  "__styled-components-stylesheet__": undefined,
                  "__styled-components__": undefined,
                  "__styled-components__next__": undefined,
                },
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
                "refs": Object {},
                "state": Object {
                  "generatedClassName": "eJsMEG",
                  "theme": Object {},
                },
                "unsubscribeId": -1,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "generatedClassName": "eJsMEG",
                  "theme": Object {},
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/home/pi/zopa-test/src/components/Input.js",
                "lineNumber": 37,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/home/pi/zopa-test/src/components/Input.js",
                  "lineNumber": 38,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "input-field",
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "Hello there, brown bear!",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "input-field",
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "Hello there, brown bear!",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/home/pi/zopa-test/src/components/Input.js",
                    "lineNumber": 44,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "",
                    "className": "label false has-content",
                    "htmlFor": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "",
                    "className": "label false has-content",
                    "htmlFor": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/home/pi/zopa-test/src/components/Input.js",
                      "lineNumber": 57,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Invalid Username",
                      "className": "helper error-text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Invalid Username",
                      "className": "helper error-text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="helper error-text"
>
                      Invalid Username
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <label
                    for=""
                    class="label false has-content"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "label",
                  "updateQueue": null,
                },
                "stateNode": <input
                  class="input-field"
                  value="Hello there, brown bear!"
/>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "input",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <input
                    className="input-field"
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="Hello there, brown bear!"
/>,
                  <label
                    className="label false has-content"
                    htmlFor=""
/>,
                  <div
                    className="helper error-text"
>
                    Invalid Username
</div>,
                ],
                "className": "sc-bdVaJa eJsMEG",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <input
                    className="input-field"
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="Hello there, brown bear!"
/>,
                  <label
                    className="label false has-content"
                    htmlFor=""
/>,
                  <div
                    className="helper error-text"
>
                    Invalid Username
</div>,
                ],
                "className": "sc-bdVaJa eJsMEG",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="sc-bdVaJa eJsMEG"
>
                <input
                                class="input-field"
                                value="Hello there, brown bear!"
                />
                <label
                                for=""
                                class="label false has-content"
                />
                <div
                                class="helper error-text"
                >
                                Invalid Username
                </div>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "sc-bdVaJa eJsMEG",
              "error": true,
              "helperText": "Invalid Username",
              "label": "",
              "onChange": [Function],
              "placeholder": "",
              "value": "Hello there, brown bear!",
            },
            "memoizedState": Object {
              "active": false,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "sc-bdVaJa eJsMEG",
              "error": true,
              "helperText": "Invalid Username",
              "label": "",
              "onChange": [Function],
              "placeholder": "",
              "value": "Hello there, brown bear!",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                                                class="sc-bdVaJa eJsMEG"
                        >
                                                <input
                                                                        class="input-field"
                                                                        value="Hello there, brown bear!"
                                                />
                                                <label
                                                                        for=""
                                                                        class="label false has-content"
                                                />
                                                <div
                                                                        class="helper error-text"
                                                >
                                                                        Invalid Username
                                                </div>
                        </div>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "expirationTime": 1,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "error": true,
                                                                                    "helperText": "Invalid Username",
                                                                                    "onChange": [Function],
                                                                                    "value": "Hello there, brown bear!",
                                                                                  }
                            }
/>,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "error": true,
                                                                                    "helperText": "Invalid Username",
                                                                                    "onChange": [Function],
                                                                                    "value": "Hello there, brown bear!",
                                                                                  }
                            }
/>,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                                            class="sc-bdVaJa eJsMEG"
                      >
                                            <input
                                                                  class="input-field"
                                                                  value="Hello there, brown bear!"
                                            />
                                            <label
                                                                  for=""
                                                                  class="label false has-content"
                                            />
                                            <div
                                                                  class="helper error-text"
                                            >
                                                                  Invalid Username
                                            </div>
                      </div>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": true,
                                                                        "helperText": "Invalid Username",
                                                                        "onChange": [Function],
                                                                        "value": "Hello there, brown bear!",
                                                                      }
                        }
/>,
                    },
                    "expirationTime": 0,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "error": true,
                      "helperText": "Invalid Username",
                      "onChange": [Function],
                      "value": "Hello there, brown bear!",
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "error": true,
                      "helperText": "Invalid Username",
                      "onChange": [Function],
                      "value": "Hello there, brown bear!",
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
              "memoizedState": Object {
                "generatedClassName": "eJsMEG",
                "theme": Object {},
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "error": true,
                "helperText": "Invalid Username",
                "onChange": [Function],
                "value": "Hello there, brown bear!",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "error": true,
                    "helperText": "Invalid Username",
                    "onChange": [Function],
                    "value": "Hello there, brown bear!",
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                                                class="sc-bdVaJa eJsMEG"
                        >
                                                <input
                                                                        class="input-field"
                                                                        value="Hello there, brown bear!"
                                                />
                                                <label
                                                                        for=""
                                                                        class="label false has-content"
                                                />
                                                <div
                                                                        class="helper error-text"
                                                >
                                                                        Invalid Username
                                                </div>
                        </div>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "expirationTime": 1,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "error": true,
                                                                                    "helperText": "Invalid Username",
                                                                                    "onChange": [Function],
                                                                                    "value": "Hello there, brown bear!",
                                                                                  }
                            }
/>,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "error": true,
                                                                                    "helperText": "Invalid Username",
                                                                                    "onChange": [Function],
                                                                                    "value": "Hello there, brown bear!",
                                                                                  }
                            }
/>,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "error": true,
                                                                  "helperText": "Invalid Username",
                                                                  "onChange": [Function],
                                                                  "value": "Hello there, brown bear!",
                                                                }
                      }
/>,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                                            class="sc-bdVaJa eJsMEG"
                      >
                                            <input
                                                                  class="input-field"
                                                                  value="Hello there, brown bear!"
                                            />
                                            <label
                                                                  for=""
                                                                  class="label false has-content"
                                            />
                                            <div
                                                                  class="helper error-text"
                                            >
                                                                  Invalid Username
                                            </div>
                      </div>
</div>,
                    "context": Object {},
                    "current": [Circular],
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "error": true,
                                                                        "helperText": "Invalid Username",
                                                                        "onChange": [Function],
                                                                        "value": "Hello there, brown bear!",
                                                                      }
                        }
/>,
                    },
                    "expirationTime": 0,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "error": true,
                      "helperText": "Invalid Username",
                      "onChange": [Function],
                      "value": "Hello there, brown bear!",
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "error": true,
                      "helperText": "Invalid Username",
                      "onChange": [Function],
                      "value": "Hello there, brown bear!",
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": StyledComponent {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "__styled-components-stylesheet__": undefined,
                  "__styled-components__": undefined,
                  "__styled-components__next__": undefined,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {},
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "attrs": Object {},
                "context": Object {
                  "__styled-components-stylesheet__": undefined,
                  "__styled-components__": undefined,
                  "__styled-components__next__": undefined,
                },
                "props": Object {
                  "error": true,
                  "helperText": "Invalid Username",
                  "onChange": [Function],
                  "value": "Hello there, brown bear!",
                },
                "refs": Object {},
                "state": Object {
                  "generatedClassName": "eJsMEG",
                  "theme": Object {},
                },
                "unsubscribeId": -1,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseState": Object {
                  "generatedClassName": "eJsMEG",
                  "theme": Object {},
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "className": "sc-bdVaJa eJsMEG",
            "error": true,
            "helperText": "Invalid Username",
            "label": "",
            "onChange": [Function],
            "placeholder": "",
            "value": "Hello there, brown bear!",
          },
          "refs": Object {},
          "renderHelperText": [Function],
          "state": Object {
            "active": false,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "sc-bdVaJa eJsMEG",
          "error": true,
          "helperText": "Invalid Username",
          "label": "",
          "onChange": [Function],
          "placeholder": "",
          "value": "Hello there, brown bear!",
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="sc-bdVaJa eJsMEG"
>
            <input
                        class="input-field"
                        value="Hello there, brown bear!"
            />
            <label
                        for=""
                        class="label false has-content"
            />
            <div
                        class="helper error-text"
            >
                        Invalid Username
            </div>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="input-field"
                onChange={[Function]}
                onFocus={[Function]}
                value="Hello there, brown bear!"
/>,
              <label
                className="label false has-content"
                htmlFor=""
/>,
              <div
                className="helper error-text"
>
                Invalid Username
</div>,
            ],
            "className": "sc-bdVaJa eJsMEG",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <input
                class="input-field"
                value="Hello there, brown bear!"
/>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-field",
                "onChange": [Function],
                "onFocus": [Function],
                "value": "Hello there, brown bear!",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "input",
            },
            Object {
              "instance": <label
                for=""
                class="label false has-content"
/>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "label false has-content",
                "htmlFor": "",
              },
              "ref": null,
              "rendered": Array [
                "",
              ],
              "type": "label",
            },
            Object {
              "instance": <div
                class="helper error-text"
>
                Invalid Username
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Invalid Username",
                "className": "helper error-text",
              },
              "ref": null,
              "rendered": Array [
                "Invalid Username",
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
